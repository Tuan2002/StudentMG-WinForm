#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StudentMG")]
	public partial class StudentMGDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertClass(Class instance);
    partial void UpdateClass(Class instance);
    partial void DeleteClass(Class instance);
    partial void InsertuserPermission(userPermission instance);
    partial void UpdateuserPermission(userPermission instance);
    partial void DeleteuserPermission(userPermission instance);
    partial void InsertMajor(Major instance);
    partial void UpdateMajor(Major instance);
    partial void DeleteMajor(Major instance);
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertuserAccount(userAccount instance);
    partial void UpdateuserAccount(userAccount instance);
    partial void DeleteuserAccount(userAccount instance);
    #endregion
		
		public StudentMGDataContext() : 
				base(global::DAL.Properties.Settings.Default.StudentMGConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StudentMGDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentMGDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentMGDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StudentMGDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Class> Classes
		{
			get
			{
				return this.GetTable<Class>();
			}
		}
		
		public System.Data.Linq.Table<userPermission> userPermissions
		{
			get
			{
				return this.GetTable<userPermission>();
			}
		}
		
		public System.Data.Linq.Table<Major> Majors
		{
			get
			{
				return this.GetTable<Major>();
			}
		}
		
		public System.Data.Linq.Table<Student> Students
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<userAccount> userAccounts
		{
			get
			{
				return this.GetTable<userAccount>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addClassToDB")]
		public int addClassToDB([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string classid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string classname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string majorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classid, classname, majorid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ViewStudents")]
		public ISingleResult<ViewStudentsResult> ViewStudents()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<ViewStudentsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addMajorToDB")]
		public int addMajorToDB([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string majorid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string majorname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), majorid, majorname);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addStudentToDB")]
		public ISingleResult<addStudentToDBResult> addStudentToDB([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string personid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string studentname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string birthday, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string majorid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string classid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), personid, studentname, birthday, gender, address, majorid, classid);
			return ((ISingleResult<addStudentToDBResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.addUserToDB")]
		public int addUserToDB([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string fullname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> permissiontype, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string avatar)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, fullname, email, permissiontype, avatar);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteClass")]
		public int DeleteClass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string classid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteMajor")]
		public int DeleteMajor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string majorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), majorid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteStudent")]
		public int DeleteStudent([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteUser")]
		public int DeleteUser([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getClassData")]
		public ISingleResult<getClassDataResult> getClassData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string classid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), classid);
			return ((ISingleResult<getClassDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getListClass")]
		public ISingleResult<getListClassResult> getListClass([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string majorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), majorid);
			return ((ISingleResult<getListClassResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getListMajor")]
		public ISingleResult<getListMajorResult> getListMajor()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<getListMajorResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getListUser")]
		public ISingleResult<getListUserResult> getListUser()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<getListUserResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getPermissionList")]
		public ISingleResult<getPermissionListResult> getPermissionList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<getPermissionListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStudentData")]
		public ISingleResult<getStudentDataResult> getStudentData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentid);
			return ((ISingleResult<getStudentDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getStudentList")]
		public ISingleResult<getStudentListResult> getStudentList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string majorid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), majorid);
			return ((ISingleResult<getStudentListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.getUserData")]
		public ISingleResult<getUserDataResult> getUserData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((ISingleResult<getUserDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.handleLoginProduce")]
		public ISingleResult<handleLoginProduceResult> handleLoginProduce([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password);
			return ((ISingleResult<handleLoginProduceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadSearchClassData")]
		public ISingleResult<LoadSearchClassDataResult> LoadSearchClassData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string keyword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keyword);
			return ((ISingleResult<LoadSearchClassDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadSearchMajorData")]
		public ISingleResult<LoadSearchMajorDataResult> LoadSearchMajorData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string keyword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keyword);
			return ((ISingleResult<LoadSearchMajorDataResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadSearchUserData")]
		public ISingleResult<LoadSearchUserDataResult> LoadSearchUserData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string keyword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keyword);
			return ((ISingleResult<LoadSearchUserDataResult>)(result.ReturnValue));
		}
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateMajorData")]
		public int UpdateMajorData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string currentmajorid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string newmajorid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string majorname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentmajorid, newmajorid, majorname);
            return ((int)(result.ReturnValue));
        }
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateStudentData")]
		public int UpdateStudentData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> studentid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string personid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string studentname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string birthday, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string majorid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string classid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentid, personid, studentname, birthday, gender, address, majorid, classid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateUserData")]
		public int UpdateUserData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string currentusername, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(16)")] string newusername, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string fullname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> permissiontype, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string avatar)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentusername, newusername, password, fullname, email, permissiontype, avatar);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateClassData")]
		public int UpdateClassData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string currentclassid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string newclassid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string classname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string majorid)
		{
            IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currentclassid, newclassid, classname, majorid);
            return ((int)(result.ReturnValue));
        }
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.LoadSearchStudentData")]
		public ISingleResult<LoadSearchStudentDataResult> LoadSearchStudentData([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(30)")] string keyword)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), keyword);
			return ((ISingleResult<LoadSearchStudentDataResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Classes")]
	public partial class Class : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ClassID;
		
		private string _ClassName;
		
		private string _MajorID;
		
		private EntitySet<Student> _Students;
		
		private EntityRef<Major> _Major;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClassIDChanging(string value);
    partial void OnClassIDChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnMajorIDChanging(string value);
    partial void OnMajorIDChanged();
    #endregion
		
		public Class()
		{
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			this._Major = default(EntityRef<Major>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(30)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="VarChar(10)")]
		public string MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					if (this._Major.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Student", Storage="_Students", ThisKey="ClassID", OtherKey="ClassID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Major_Class", Storage="_Major", ThisKey="MajorID", OtherKey="MajorID", IsForeignKey=true)]
		public Major Major
		{
			get
			{
				return this._Major.Entity;
			}
			set
			{
				Major previousValue = this._Major.Entity;
				if (((previousValue != value) 
							|| (this._Major.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Major.Entity = null;
						previousValue.Classes.Remove(this);
					}
					this._Major.Entity = value;
					if ((value != null))
					{
						value.Classes.Add(this);
						this._MajorID = value.MajorID;
					}
					else
					{
						this._MajorID = default(string);
					}
					this.SendPropertyChanged("Major");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Class = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Class = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userPermission")]
	public partial class userPermission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _permissionId;
		
		private string _permissionType;
		
		private EntitySet<userAccount> _userAccounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpermissionIdChanging(int value);
    partial void OnpermissionIdChanged();
    partial void OnpermissionTypeChanging(string value);
    partial void OnpermissionTypeChanged();
    #endregion
		
		public userPermission()
		{
			this._userAccounts = new EntitySet<userAccount>(new Action<userAccount>(this.attach_userAccounts), new Action<userAccount>(this.detach_userAccounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int permissionId
		{
			get
			{
				return this._permissionId;
			}
			set
			{
				if ((this._permissionId != value))
				{
					this.OnpermissionIdChanging(value);
					this.SendPropertyChanging();
					this._permissionId = value;
					this.SendPropertyChanged("permissionId");
					this.OnpermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string permissionType
		{
			get
			{
				return this._permissionType;
			}
			set
			{
				if ((this._permissionType != value))
				{
					this.OnpermissionTypeChanging(value);
					this.SendPropertyChanging();
					this._permissionType = value;
					this.SendPropertyChanged("permissionType");
					this.OnpermissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="userPermission_userAccount", Storage="_userAccounts", ThisKey="permissionId", OtherKey="permissionId")]
		public EntitySet<userAccount> userAccounts
		{
			get
			{
				return this._userAccounts;
			}
			set
			{
				this._userAccounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_userAccounts(userAccount entity)
		{
			this.SendPropertyChanging();
			entity.userPermission = this;
		}
		
		private void detach_userAccounts(userAccount entity)
		{
			this.SendPropertyChanging();
			entity.userPermission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Majors")]
	public partial class Major : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MajorID;
		
		private string _MajorName;
		
		private EntitySet<Class> _Classes;
		
		private EntitySet<Student> _Students;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMajorIDChanging(string value);
    partial void OnMajorIDChanged();
    partial void OnMajorNameChanging(string value);
    partial void OnMajorNameChanged();
    #endregion
		
		public Major()
		{
			this._Classes = new EntitySet<Class>(new Action<Class>(this.attach_Classes), new Action<Class>(this.detach_Classes));
			this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this.OnMajorNameChanging(value);
					this.SendPropertyChanging();
					this._MajorName = value;
					this.SendPropertyChanged("MajorName");
					this.OnMajorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Major_Class", Storage="_Classes", ThisKey="MajorID", OtherKey="MajorID")]
		public EntitySet<Class> Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				this._Classes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Major_Student", Storage="_Students", ThisKey="MajorID", OtherKey="MajorID")]
		public EntitySet<Student> Students
		{
			get
			{
				return this._Students;
			}
			set
			{
				this._Students.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Major = this;
		}
		
		private void detach_Classes(Class entity)
		{
			this.SendPropertyChanging();
			entity.Major = null;
		}
		
		private void attach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Major = this;
		}
		
		private void detach_Students(Student entity)
		{
			this.SendPropertyChanging();
			entity.Major = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentID;
		
		private string _PersonID;
		
		private string _Fullname;
		
		private string _Birthday;
		
		private string _Gender;
		
		private string _Address;
		
		private string _MajorID;
		
		private string _ClassID;
		
		private EntityRef<Class> _Class;
		
		private EntityRef<Major> _Major;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnPersonIDChanging(string value);
    partial void OnPersonIDChanged();
    partial void OnFullnameChanging(string value);
    partial void OnFullnameChanged();
    partial void OnBirthdayChanging(string value);
    partial void OnBirthdayChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnMajorIDChanging(string value);
    partial void OnMajorIDChanged();
    partial void OnClassIDChanging(string value);
    partial void OnClassIDChanged();
    #endregion
		
		public Student()
		{
			this._Class = default(EntityRef<Class>);
			this._Major = default(EntityRef<Major>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this.OnPersonIDChanging(value);
					this.SendPropertyChanging();
					this._PersonID = value;
					this.SendPropertyChanged("PersonID");
					this.OnPersonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="NVarChar(30)")]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this.OnFullnameChanging(value);
					this.SendPropertyChanging();
					this._Fullname = value;
					this.SendPropertyChanged("Fullname");
					this.OnFullnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="VarChar(10)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(6)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="VarChar(10)")]
		public string MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					if (this._Major.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMajorIDChanging(value);
					this.SendPropertyChanging();
					this._MajorID = value;
					this.SendPropertyChanged("MajorID");
					this.OnMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="VarChar(10)")]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					if (this._Class.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClassIDChanging(value);
					this.SendPropertyChanging();
					this._ClassID = value;
					this.SendPropertyChanged("ClassID");
					this.OnClassIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Class_Student", Storage="_Class", ThisKey="ClassID", OtherKey="ClassID", IsForeignKey=true)]
		public Class Class
		{
			get
			{
				return this._Class.Entity;
			}
			set
			{
				Class previousValue = this._Class.Entity;
				if (((previousValue != value) 
							|| (this._Class.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Class.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Class.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._ClassID = value.ClassID;
					}
					else
					{
						this._ClassID = default(string);
					}
					this.SendPropertyChanged("Class");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Major_Student", Storage="_Major", ThisKey="MajorID", OtherKey="MajorID", IsForeignKey=true)]
		public Major Major
		{
			get
			{
				return this._Major.Entity;
			}
			set
			{
				Major previousValue = this._Major.Entity;
				if (((previousValue != value) 
							|| (this._Major.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Major.Entity = null;
						previousValue.Students.Remove(this);
					}
					this._Major.Entity = value;
					if ((value != null))
					{
						value.Students.Add(this);
						this._MajorID = value.MajorID;
					}
					else
					{
						this._MajorID = default(string);
					}
					this.SendPropertyChanged("Major");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.userAccounts")]
	public partial class userAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _userName;
		
		private string _userPassword;
		
		private string _userEmail;
		
		private string _userFullName;
		
		private System.Nullable<int> _permissionId;
		
		private string _userAvatar;
		
		private EntityRef<userPermission> _userPermission;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserPasswordChanging(string value);
    partial void OnuserPasswordChanged();
    partial void OnuserEmailChanging(string value);
    partial void OnuserEmailChanged();
    partial void OnuserFullNameChanging(string value);
    partial void OnuserFullNameChanged();
    partial void OnpermissionIdChanging(System.Nullable<int> value);
    partial void OnpermissionIdChanged();
    partial void OnuserAvatarChanging(string value);
    partial void OnuserAvatarChanged();
    #endregion
		
		public userAccount()
		{
			this._userPermission = default(EntityRef<userPermission>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(16) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPassword", DbType="VarChar(50)")]
		public string userPassword
		{
			get
			{
				return this._userPassword;
			}
			set
			{
				if ((this._userPassword != value))
				{
					this.OnuserPasswordChanging(value);
					this.SendPropertyChanging();
					this._userPassword = value;
					this.SendPropertyChanged("userPassword");
					this.OnuserPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userEmail", DbType="VarChar(50)")]
		public string userEmail
		{
			get
			{
				return this._userEmail;
			}
			set
			{
				if ((this._userEmail != value))
				{
					this.OnuserEmailChanging(value);
					this.SendPropertyChanging();
					this._userEmail = value;
					this.SendPropertyChanged("userEmail");
					this.OnuserEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userFullName", DbType="NVarChar(30)")]
		public string userFullName
		{
			get
			{
				return this._userFullName;
			}
			set
			{
				if ((this._userFullName != value))
				{
					this.OnuserFullNameChanging(value);
					this.SendPropertyChanging();
					this._userFullName = value;
					this.SendPropertyChanged("userFullName");
					this.OnuserFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionId", DbType="Int")]
		public System.Nullable<int> permissionId
		{
			get
			{
				return this._permissionId;
			}
			set
			{
				if ((this._permissionId != value))
				{
					if (this._userPermission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnpermissionIdChanging(value);
					this.SendPropertyChanging();
					this._permissionId = value;
					this.SendPropertyChanged("permissionId");
					this.OnpermissionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userAvatar", DbType="NVarChar(MAX)")]
		public string userAvatar
		{
			get
			{
				return this._userAvatar;
			}
			set
			{
				if ((this._userAvatar != value))
				{
					this.OnuserAvatarChanging(value);
					this.SendPropertyChanging();
					this._userAvatar = value;
					this.SendPropertyChanged("userAvatar");
					this.OnuserAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="userPermission_userAccount", Storage="_userPermission", ThisKey="permissionId", OtherKey="permissionId", IsForeignKey=true)]
		public userPermission userPermission
		{
			get
			{
				return this._userPermission.Entity;
			}
			set
			{
				userPermission previousValue = this._userPermission.Entity;
				if (((previousValue != value) 
							|| (this._userPermission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._userPermission.Entity = null;
						previousValue.userAccounts.Remove(this);
					}
					this._userPermission.Entity = value;
					if ((value != null))
					{
						value.userAccounts.Add(this);
						this._permissionId = value.permissionId;
					}
					else
					{
						this._permissionId = default(Nullable<int>);
					}
					this.SendPropertyChanged("userPermission");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ViewStudentsResult
	{
		
		private int _StudentID;
		
		private string _PersonID;
		
		private string _Fullname;
		
		private string _Birthday;
		
		private string _Gender;
		
		private string _Address;
		
		private string _MajorID;
		
		private string _ClassID;
		
		public ViewStudentsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="NVarChar(30)")]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this._Fullname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="VarChar(10)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(6)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="VarChar(10)")]
		public string MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this._MajorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="VarChar(10)")]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
	}
	
	public partial class addStudentToDBResult
	{
		
		private int _StudentID;
		
		public addStudentToDBResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
	}
	
	public partial class getClassDataResult
	{
		
		private string _ClassID;
		
		private string _ClassName;
		
		private string _MajorID;
		
		public getClassDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(30)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="VarChar(10)")]
		public string MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this._MajorID = value;
				}
			}
		}
	}
	
	public partial class getListClassResult
	{
		
		private string _ClassID;
		
		private string _ClassName;
		
		private string _MajorName;
		
		public getListClassResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(30)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this._MajorName = value;
				}
			}
		}
	}
	
	public partial class getListMajorResult
	{
		
		private string _majorid;
		
		private string _majorname;
		
		public getListMajorResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_majorid", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string majorid
		{
			get
			{
				return this._majorid;
			}
			set
			{
				if ((this._majorid != value))
				{
					this._majorid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_majorname", DbType="NVarChar(50)")]
		public string majorname
		{
			get
			{
				return this._majorname;
			}
			set
			{
				if ((this._majorname != value))
				{
					this._majorname = value;
				}
			}
		}
	}
	
	public partial class getListUserResult
	{
		
		private string _userName;
		
		private string _userPassword;
		
		private string _userEmail;
		
		public getListUserResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this._userName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPassword", DbType="VarChar(50)")]
		public string userPassword
		{
			get
			{
				return this._userPassword;
			}
			set
			{
				if ((this._userPassword != value))
				{
					this._userPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userEmail", DbType="VarChar(50)")]
		public string userEmail
		{
			get
			{
				return this._userEmail;
			}
			set
			{
				if ((this._userEmail != value))
				{
					this._userEmail = value;
				}
			}
		}
	}
	
	public partial class getPermissionListResult
	{
		
		private string _permissionType;
		
		public getPermissionListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string permissionType
		{
			get
			{
				return this._permissionType;
			}
			set
			{
				if ((this._permissionType != value))
				{
					this._permissionType = value;
				}
			}
		}
	}
	
	public partial class getStudentDataResult
	{
		
		private string _PersonID;
		
		private string _Fullname;
		
		private string _Birthday;
		
		private string _Gender;
		
		private string _Address;
		
		private string _MajorID;
		
		private string _ClassID;
		
		public getStudentDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PersonID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PersonID
		{
			get
			{
				return this._PersonID;
			}
			set
			{
				if ((this._PersonID != value))
				{
					this._PersonID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="NVarChar(30)")]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this._Fullname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="VarChar(10)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(6)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(100)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="VarChar(10)")]
		public string MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this._MajorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="VarChar(10)")]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
	}
	
	public partial class getStudentListResult
	{
		
		private int _StudentID;
		
		private string _Fullname;
		
		private string _Gender;
		
		private string _Birthday;
		
		private string _ClassID;
		
		private string _MajorName;
		
		public getStudentListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="NVarChar(30)")]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this._Fullname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(6)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="VarChar(10)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="VarChar(10)")]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this._MajorName = value;
				}
			}
		}
	}
	
	public partial class getUserDataResult
	{
		
		private string _userName;
		
		private string _userPassword;
		
		private string _userEmail;
		
		private string _userFullName;
		
		private System.Nullable<int> _permissionId;
		
		private string _userAvatar;
		
		public getUserDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this._userName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPassword", DbType="VarChar(50)")]
		public string userPassword
		{
			get
			{
				return this._userPassword;
			}
			set
			{
				if ((this._userPassword != value))
				{
					this._userPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userEmail", DbType="VarChar(50)")]
		public string userEmail
		{
			get
			{
				return this._userEmail;
			}
			set
			{
				if ((this._userEmail != value))
				{
					this._userEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userFullName", DbType="NVarChar(30)")]
		public string userFullName
		{
			get
			{
				return this._userFullName;
			}
			set
			{
				if ((this._userFullName != value))
				{
					this._userFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionId", DbType="Int")]
		public System.Nullable<int> permissionId
		{
			get
			{
				return this._permissionId;
			}
			set
			{
				if ((this._permissionId != value))
				{
					this._permissionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userAvatar", DbType="NVarChar(MAX)")]
		public string userAvatar
		{
			get
			{
				return this._userAvatar;
			}
			set
			{
				if ((this._userAvatar != value))
				{
					this._userAvatar = value;
				}
			}
		}
	}
	
	public partial class handleLoginProduceResult
	{
		
		private string _userFullName;
		
		private string _permissionType;
		
		private string _userAvatar;
		
		public handleLoginProduceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userFullName", DbType="NVarChar(30)")]
		public string userFullName
		{
			get
			{
				return this._userFullName;
			}
			set
			{
				if ((this._userFullName != value))
				{
					this._userFullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permissionType", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string permissionType
		{
			get
			{
				return this._permissionType;
			}
			set
			{
				if ((this._permissionType != value))
				{
					this._permissionType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userAvatar", DbType="NVarChar(MAX)")]
		public string userAvatar
		{
			get
			{
				return this._userAvatar;
			}
			set
			{
				if ((this._userAvatar != value))
				{
					this._userAvatar = value;
				}
			}
		}
	}
	
	public partial class LoadSearchClassDataResult
	{
		
		private string _ClassID;
		
		private string _ClassName;
		
		private string _MajorName;
		
		public LoadSearchClassDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="NVarChar(30)")]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this._ClassName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this._MajorName = value;
				}
			}
		}
	}
	
	public partial class LoadSearchMajorDataResult
	{
		
		private string _MajorID;
		
		private string _MajorName;
		
		public LoadSearchMajorDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MajorID
		{
			get
			{
				return this._MajorID;
			}
			set
			{
				if ((this._MajorID != value))
				{
					this._MajorID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this._MajorName = value;
				}
			}
		}
	}
	
	public partial class LoadSearchUserDataResult
	{
		
		private string _userName;
		
		private string _userPassword;
		
		private string _userEmail;
		
		public LoadSearchUserDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this._userName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPassword", DbType="VarChar(50)")]
		public string userPassword
		{
			get
			{
				return this._userPassword;
			}
			set
			{
				if ((this._userPassword != value))
				{
					this._userPassword = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userEmail", DbType="VarChar(50)")]
		public string userEmail
		{
			get
			{
				return this._userEmail;
			}
			set
			{
				if ((this._userEmail != value))
				{
					this._userEmail = value;
				}
			}
		}
	}
	
	public partial class LoadSearchStudentDataResult
	{
		
		private int _StudentID;
		
		private string _Fullname;
		
		private string _Gender;
		
		private string _Birthday;
		
		private string _ClassID;
		
		private string _MajorName;
		
		public LoadSearchStudentDataResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this._StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fullname", DbType="NVarChar(30)")]
		public string Fullname
		{
			get
			{
				return this._Fullname;
			}
			set
			{
				if ((this._Fullname != value))
				{
					this._Fullname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(6)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="VarChar(10)")]
		public string Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this._Birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassID", DbType="VarChar(10)")]
		public string ClassID
		{
			get
			{
				return this._ClassID;
			}
			set
			{
				if ((this._ClassID != value))
				{
					this._ClassID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorName", DbType="NVarChar(50)")]
		public string MajorName
		{
			get
			{
				return this._MajorName;
			}
			set
			{
				if ((this._MajorName != value))
				{
					this._MajorName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
